###############################################################################
# 0. Namespace
###############################################################################
apiVersion: v1
kind: Namespace
metadata:
  name: immich
---
###############################################################################
# 1. Secrets – keep credentials in one place
###############################################################################
apiVersion: v1
kind: Secret
metadata:
  name: immich-db-secret
  namespace: immich
type: Opaque
stringData:
  # ⇣ choose strong values in production
  POSTGRES_USER: immich
  POSTGRES_PASSWORD: changeme
  POSTGRES_DB: immich
  # Immich expects the same values under its own names
  DB_USERNAME: immich
  DB_PASSWORD: changeme
  DB_DATABASE_NAME: immich
---
###############################################################################
# 2. ConfigMap – common, non-secret settings
###############################################################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: immich-config
  namespace: immich
data:
  DB_HOSTNAME: immich-postgres
  DB_PORT: "5432"
  REDIS_HOSTNAME: immich-redis
  REDIS_PORT: "6379"
  IMMICH_PORT: "2283"        # Immich now listens on 2283 by default :contentReference[oaicite:0]{index=0}
---
###############################################################################
# 3. Storage objects
###############################################################################
# Claim the *existing* PV called immich-postgres-pv
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: immich-postgres-pvc
  namespace: immich
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 50Gi          # ignored – PV already defines the size
  volumeName: immich-postgres-pv
---
###############################################################################
# 4. PostgreSQL 14 + VectorChord 0.4.3
###############################################################################
apiVersion: v1
kind: Service
metadata:
  name: immich-postgres
  namespace: immich
spec:
  clusterIP: None           # headless – lets the StatefulSet use stable DNS
  ports:
    - port: 5432
      name: postgres
  selector:
    app: immich-postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: immich-postgres
  namespace: immich
spec:
  serviceName: immich-postgres
  replicas: 1
  selector:
    matchLabels:
      app: immich-postgres
  template:
    metadata:
      labels:
        app: immich-postgres
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: postgres
          image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:5f6a838e4e44c8e0e019d0ebfe3ee8952b69afc2809b2c25f7b0119641978e91 :contentReference[oaicite:1]{index=1}
          env:
            - name: POSTGRES_USER
              valueFrom: {secretKeyRef: {name: immich-db-secret, key: POSTGRES_USER}}
            - name: POSTGRES_PASSWORD
              valueFrom: {secretKeyRef: {name: immich-db-secret, key: POSTGRES_PASSWORD}}
            - name: POSTGRES_DB
              valueFrom: {secretKeyRef: {name: immich-db-secret, key: POSTGRES_DB}}
            - name: POSTGRES_INITDB_ARGS   # extra safety
              value: "--data-checksums"
            - name: DB_STORAGE_TYPE        # avoids entrypoint warning
              value: "SSD"
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data   # expected by the image
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: immich-postgres-pvc
---
###############################################################################
# 5. Redis (Valkey 8) – required by Immich
###############################################################################
apiVersion: v1
kind: Service
metadata:
  name: immich-redis
  namespace: immich
spec:
  clusterIP: None
  ports:
    - port: 6379
      name: redis
  selector:
    app: immich-redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-redis
  namespace: immich
spec:
  replicas: 1
  selector:
    matchLabels:
      app: immich-redis
  template:
    metadata:
      labels:
        app: immich-redis
    spec:
      containers:
        - name: redis
          image: docker.io/valkey/valkey:8-bookworm
          ports:
            - containerPort: 6379
          livenessProbe:
            tcpSocket: {port: 6379}
            initialDelaySeconds: 10
            periodSeconds: 10
---
###############################################################################
# 6. Immich – server and background workers
###############################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-server
  namespace: immich
spec:
  replicas: 1
  selector:
    matchLabels:
      app: immich-server
  template:
    metadata:
      labels:
        app: immich-server
    spec:
      containers:
        - name: server
          image: ghcr.io/immich-app/immich-server:release
          command: ["start.sh", "immich"]
          envFrom:
            - configMapRef: {name: immich-config}
            - secretRef:  {name: immich-db-secret}
          ports:
            - containerPort: 2283   # IMMICH_PORT
          volumeMounts:
            - name: upload
              mountPath: /usr/src/app/upload
      volumes:
        - name: upload
          emptyDir: {}   # ⚠️ change to PVC/hostPath if you want persistent media
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-microservices
  namespace: immich
spec:
  replicas: 1
  selector:
    matchLabels:
      app: immich-microservices
  template:
    metadata:
      labels:
        app: immich-microservices
    spec:
      containers:
        - name: micro
          image: ghcr.io/immich-app/immich-microservices:release
          command: ["start.sh", "microservices"]
          envFrom:
            - configMapRef: {name: immich-config}
            - secretRef:  {name: immich-db-secret}
          volumeMounts:
            - name: upload
              mountPath: /usr/src/app/upload
      volumes:
        - name: upload
          emptyDir: {}   # keep in-sync with the server volume
---
###############################################################################
# 7. Front-door Service – fixed IP 172.16.23.30 (requires Metallb or similar)
###############################################################################
apiVersion: v1
kind: Service
metadata:
  name: immich
  namespace: immich
spec:
  type: LoadBalancer           # or NodePort + externalIPs; choose what your cluster supports
  loadBalancerIP: 172.16.23.30 # must lie inside your Service CIDR / Metallb pool
  ports:
    - port: 80
      targetPort: 2283
      protocol: TCP
      name: http
  selector:
    app: immich-server
