###############################################################################
# CHANGES AT A GLANCE
# • dropped the obsolete immich-microservices Deployment
# • added the immich-machine-learning Deployment + model-cache volume
# • removed the extra "command" line – the image’s default entrypoint is fine
# Everything else (Postgres on the existing PV, Redis/Valkey, fixed LB IP)
# remains exactly the same.
###############################################################################

apiVersion: v1
kind: Namespace
metadata:
  name: immich
---
apiVersion: v1
kind: Secret
metadata:
  name: immich-db-secret
  namespace: immich
type: Opaque
stringData:
  POSTGRES_USER:    immich
  POSTGRES_PASSWORD: changeme
  POSTGRES_DB:      immich
  DB_USERNAME:      immich
  DB_PASSWORD:      changeme
  DB_DATABASE_NAME: immich
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: immich-config
  namespace: immich
data:
  DB_HOSTNAME: immich-postgres
  DB_PORT: "5432"
  REDIS_HOSTNAME: immich-redis
  REDIS_PORT: "6379"
  IMMICH_PORT: "2283"
---
# existing PV → PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: immich-postgres-pvc
  namespace: immich
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 50Gi
  volumeName: immich-postgres-pv
---
# PostgreSQL 14-vectorchord
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: immich-postgres
  namespace: immich
spec:
  serviceName: immich-postgres
  replicas: 1
  selector:
    matchLabels: {app: immich-postgres}
  template:
    metadata: {labels: {app: immich-postgres}}
    spec:
      containers:
        - name: postgres
          image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:5f6a838e4e44c8e0e019d0ebfe3ee8952b69afc2809b2c25f7b0119641978e91 :contentReference[oaicite:0]{index=0}
          env:
            - name: POSTGRES_USER      ; valueFrom: {secretKeyRef: {name: immich-db-secret, key: POSTGRES_USER}}
            - name: POSTGRES_PASSWORD  ; valueFrom: {secretKeyRef: {name: immich-db-secret, key: POSTGRES_PASSWORD}}
            - name: POSTGRES_DB        ; valueFrom: {secretKeyRef: {name: immich-db-secret, key: POSTGRES_DB}}
            - name: POSTGRES_INITDB_ARGS ; value: "--data-checksums"
            - name: DB_STORAGE_TYPE    ; value: "SSD"
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: data
      volumes:
        - name: data
          persistentVolumeClaim: {claimName: immich-postgres-pvc}
---
# Redis / Valkey 8
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-redis
  namespace: immich
spec:
  replicas: 1
  selector: {matchLabels: {app: immich-redis}}
  template:
    metadata: {labels: {app: immich-redis}}
    spec:
      containers:
        - name: redis
          image: docker.io/valkey/valkey:8-bookworm@sha256:fec42f399876eb6faf9e008570597741c87ff7662a54185593e74b09ce83d177 :contentReference[oaicite:1]{index=1}
          ports: [{containerPort: 6379}]
          livenessProbe: {tcpSocket: {port: 6379}, initialDelaySeconds: 10}
---
# Immich server (all API + jobs)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-server
  namespace: immich
spec:
  replicas: 1
  selector: {matchLabels: {app: immich-server}}
  template:
    metadata: {labels: {app: immich-server}}
    spec:
      containers:
        - name: server
          image: ghcr.io/immich-app/immich-server:release :contentReference[oaicite:2]{index=2}
          envFrom:
            - configMapRef: {name: immich-config}
            - secretRef:   {name: immich-db-secret}
          ports: [{containerPort: 2283}]
          volumeMounts:
            - name: upload
              mountPath: /usr/src/app/upload
      volumes:
        - name: upload
          emptyDir: {}    # replace with PVC if you need persistence
---
# Immich machine-learning sidecar
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-machine-learning
  namespace: immich
spec:
  replicas: 1
  selector: {matchLabels: {app: immich-ml}}
  template:
    metadata: {labels: {app: immich-ml}}
    spec:
      containers:
        - name: ml
          image: ghcr.io/immich-app/immich-machine-learning:release :contentReference[oaicite:3]{index=3}
          envFrom:
            - configMapRef: {name: immich-config}
            - secretRef:   {name: immich-db-secret}
          volumeMounts:
            - name: model-cache
              mountPath: /cache
      volumes:
        - name: model-cache
          emptyDir: {}    # use a PVC if you want models to survive restarts
---
# LoadBalancer with fixed IP 172.16.23.30
apiVersion: v1
kind: Service
metadata:
  name: immich
  namespace: immich
spec:
  type: LoadBalancer
  loadBalancerIP: 172.16.23.30
  ports:
    - port: 80
      targetPort: 2283
      protocol: TCP
      name: http
  selector: {app: immich-server}
